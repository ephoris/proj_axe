# =============================================================================
# AXE Configuration File
#   Header for each setting section
#   APP
#   LOGGER - output setting
#   IO - base directory for IO
#   LSM - Log structured merge tree assumptions and settings
#   JOB - all job specific settings
#   LCM - Learned cost model specifics
#   LTune - Learned tuner specifics
#   SCHEDULERS - ML learning rate schduler kwargs
#   OPTIMIZERS - ML optimizer kwargs
#   LOSS - ML Loss function kwargs
# =============================================================================

# =============================================================================
# HEADER APP
#   List of jobs we want to run in axe/jobs folder
# =============================================================================
[app]
name = "AXE"
run = [
    "create_lcm_data",
]

# =============================================================================
# HEADER LOGGER
#   Generic IO settings for experiments, saving data, etc
# =============================================================================
[log]
name = 'axe-logger'
format = "[%(levelname)s][%(asctime)-15s][%(filename)s] %(message)s"
datefmt = '%d-%m-%y:%H:%M:%S'
level = "DEBUG"
disable_tqdm = false

# =============================================================================
# HEADER LSM
#   Generic LSM settings
# =============================================================================
[lsm]
# Policy will effect everything else down stream (e.g. choice of neural network
# architecture for learned cost model)
#   Tiering
#   Leveling
#   Classic - Considers both leveing and tiering
#   QHybrid - Levels 1 -> L = Q
#   Fluid - Levels 1 -> (L-1) = Q, Level L = Z
#   Kapacity - Each level has own K_i decision
policy = 'Kapacity'

[lsm.bounds]
max_considered_levels = 20                  # Max number of levels to consider
size_ratio_range = [2, 31]                  # low, high of size ratios to consider
page_sizes = [4, 8, 16]                     # KB pages
entry_sizes = [1024, 2048, 4096, 8192]      # bits
memory_budget_range = [5, 20]               # low, high, bits per element
selectivity_range = [1e-7, 1e-9]            # low, high
elements_range = [100000000, 1000000000]    # element range

# =============================================================================
# HEADER JOB
#   Settings for each individual job
# =============================================================================
# -----------------------------------------------------------------------------
[job] # Common settings across all jobs
# -----------------------------------------------------------------------------
use_gpu_if_avail = false

# -----------------------------------------------------------------------------
[job.create_lcm_data]
# -----------------------------------------------------------------------------
output_dir = "data/lcm/train_data"
num_samples = 1024
num_files = 2
file_prefix = "data"
num_workers = 1
overwrite_if_exists = true
